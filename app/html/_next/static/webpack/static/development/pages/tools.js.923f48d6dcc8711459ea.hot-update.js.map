{"version":3,"file":"static/webpack/static\\development\\pages\\tools.js.923f48d6dcc8711459ea.hot-update.js","sources":["webpack:///./components/Code/index.js"],"sourcesContent":["import { Radio, Input } from \"antd\";\r\nimport base64 from \"Base64\";\r\nimport css from \"./index.less\";\r\nconst { TextArea } = Input;\r\nvar unicode = {\r\n  encode: function (str) {\r\n    return escape(str)\r\n      .toLocaleLowerCase()\r\n      .replace(/%u/gi, \"\\\\u\");\r\n  },\r\n  decode: function (str) {\r\n    return unescape(str.replace(/\\\\u/gi, \"%u\"));\r\n  }\r\n};\r\n\r\nfunction strimHtml(str) {\r\n  var reg = /<(?:.|\\s)*?>/gi;\r\n  return str.replace(reg, \"\");\r\n}\r\nexport default class extends React.Component {\r\n  static async getInitialProps({ req }) {\r\n    const userAgent = req ? req.headers[\"user-agent\"] : navigator.userAgent;\r\n    return { userAgent };\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      codeType: 1,\r\n      beforeValue: \"\",\r\n      afterValue: \"\"\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.textChange = this.textChange.bind(this);\r\n  }\r\n\r\n  onChange(ev) {\r\n    this.setState({ codeType: ev.target.value });\r\n    this.run(ev.target.value);\r\n  }\r\n  run(type) {\r\n    const { beforeValue } = this.state;\r\n    let afterValue;\r\n    switch (type) {\r\n      case 1:\r\n        try {\r\n          afterValue = base64.btoa(\r\n            window.unescape(window.encodeURIComponent(beforeValue))\r\n          );\r\n        } catch (error) { }\r\n        break;\r\n      case 2:\r\n        try {\r\n          afterValue = window.decodeURIComponent(\r\n            window.escape(base64.atob(beforeValue))\r\n          );\r\n        } catch (error) { }\r\n        break;\r\n      case 3:\r\n        try {\r\n          afterValue = window.encodeURIComponent(beforeValue);\r\n        } catch (error) { }\r\n        break;\r\n      case 4:\r\n        try {\r\n          afterValue = window.decodeURIComponent(beforeValue);\r\n        } catch (error) { }\r\n        break;\r\n      case 5:\r\n        try {\r\n          afterValue = unicode.encode(beforeValue);\r\n        } catch (error) { }\r\n        break;\r\n      case 6:\r\n        try {\r\n          afterValue = unicode.decode(beforeValue);\r\n        } catch (error) { }\r\n        break;\r\n      case 7:\r\n        try {\r\n          afterValue = strimHtml(beforeValue);\r\n        } catch (error) { }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ afterValue });\r\n  }\r\n  textChange(ev) {\r\n    let value = ev.target.value;\r\n    this.setState({ beforeValue: value });\r\n\r\n    this.run(this.state.codeType);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={css.buttonBox}>\r\n          <Radio.Group\r\n            onChange={this.onChange}\r\n            onClick={this.onChange}\r\n            value={this.state.codeType}\r\n            buttonStyle=\"solid\"\r\n          >\r\n            <Radio.Button value={1}>Base64编码</Radio.Button>\r\n            <Radio.Button value={2}>Base64解码</Radio.Button>\r\n            <Radio.Button value={3}>Url编码</Radio.Button>\r\n            <Radio.Button value={4}>Url解码</Radio.Button>\r\n            <Radio.Button value={5}>Unicode编码</Radio.Button>\r\n            <Radio.Button value={6}>Unicode解码</Radio.Button>\r\n            <Radio.Button value={7}>去除HTML</Radio.Button>\r\n          </Radio.Group>\r\n        </div>\r\n        <div className={css.codeBox}>\r\n          <div>\r\n            <TextArea\r\n              value={this.state.beforeValue}\r\n              onChange={this.textChange}\r\n              onKeyUp={this.textChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextArea readOnly value={this.state.afterValue} />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AATA;AAUA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA1CA;AACA;AA2CA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;;;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA7GA;AACA;;;;;A","sourceRoot":""}